// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cs3/sharing/ocm/v1beta1/ocm_api.proto

package ocmv1beta1

import (
	context "context"
	fmt "fmt"
	v1beta14 "github.com/cs3org/go-cs3apis/cs3/identity/user/v1beta1"
	v1beta12 "github.com/cs3org/go-cs3apis/cs3/ocm/provider/v1beta1"
	v1beta13 "github.com/cs3org/go-cs3apis/cs3/rpc/v1beta1"
	v1beta11 "github.com/cs3org/go-cs3apis/cs3/storage/provider/v1beta1"
	v1beta1 "github.com/cs3org/go-cs3apis/cs3/types/v1beta1"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// REQUIRED.
// The filter to apply.
type ListOCMSharesRequest_Filter_Type int32

const (
	ListOCMSharesRequest_Filter_TYPE_INVALID          ListOCMSharesRequest_Filter_Type = 0
	ListOCMSharesRequest_Filter_TYPE_NO               ListOCMSharesRequest_Filter_Type = 1
	ListOCMSharesRequest_Filter_TYPE_REFERENCE        ListOCMSharesRequest_Filter_Type = 2
	ListOCMSharesRequest_Filter_TYPE_OWNER            ListOCMSharesRequest_Filter_Type = 3
	ListOCMSharesRequest_Filter_TYPE_CREATOR          ListOCMSharesRequest_Filter_Type = 4
	ListOCMSharesRequest_Filter_TYPE_OWNER_PROVIDER   ListOCMSharesRequest_Filter_Type = 5
	ListOCMSharesRequest_Filter_TYPE_CREATOR_PROVIDER ListOCMSharesRequest_Filter_Type = 6
)

var ListOCMSharesRequest_Filter_Type_name = map[int32]string{
	0: "TYPE_INVALID",
	1: "TYPE_NO",
	2: "TYPE_REFERENCE",
	3: "TYPE_OWNER",
	4: "TYPE_CREATOR",
	5: "TYPE_OWNER_PROVIDER",
	6: "TYPE_CREATOR_PROVIDER",
}

var ListOCMSharesRequest_Filter_Type_value = map[string]int32{
	"TYPE_INVALID":          0,
	"TYPE_NO":               1,
	"TYPE_REFERENCE":        2,
	"TYPE_OWNER":            3,
	"TYPE_CREATOR":          4,
	"TYPE_OWNER_PROVIDER":   5,
	"TYPE_CREATOR_PROVIDER": 6,
}

func (x ListOCMSharesRequest_Filter_Type) String() string {
	return proto.EnumName(ListOCMSharesRequest_Filter_Type_name, int32(x))
}

func (ListOCMSharesRequest_Filter_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{4, 0, 0}
}

type CreateOCMShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// Unique identifier of the shared resource (path must be empty).
	Ref *v1beta11.Reference `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	// REQUIRED.
	// The share grant for the share.
	Grant *ShareGrant `protobuf:"bytes,3,opt,name=grant,proto3" json:"grant,omitempty"`
	// REQUIRED.
	// The details of the recipient user's mesh provider.
	RecipientMeshProvider *v1beta12.ProviderInfo `protobuf:"bytes,4,opt,name=recipient_mesh_provider,json=recipientMeshProvider,proto3" json:"recipient_mesh_provider,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}               `json:"-"`
	XXX_unrecognized      []byte                 `json:"-"`
	XXX_sizecache         int32                  `json:"-"`
}

func (m *CreateOCMShareRequest) Reset()         { *m = CreateOCMShareRequest{} }
func (m *CreateOCMShareRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOCMShareRequest) ProtoMessage()    {}
func (*CreateOCMShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{0}
}

func (m *CreateOCMShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOCMShareRequest.Unmarshal(m, b)
}
func (m *CreateOCMShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOCMShareRequest.Marshal(b, m, deterministic)
}
func (m *CreateOCMShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOCMShareRequest.Merge(m, src)
}
func (m *CreateOCMShareRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOCMShareRequest.Size(m)
}
func (m *CreateOCMShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOCMShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOCMShareRequest proto.InternalMessageInfo

func (m *CreateOCMShareRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *CreateOCMShareRequest) GetRef() *v1beta11.Reference {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *CreateOCMShareRequest) GetGrant() *ShareGrant {
	if m != nil {
		return m.Grant
	}
	return nil
}

func (m *CreateOCMShareRequest) GetRecipientMeshProvider() *v1beta12.ProviderInfo {
	if m != nil {
		return m.RecipientMeshProvider
	}
	return nil
}

type CreateOCMShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The created share.
	Share                *Share   `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOCMShareResponse) Reset()         { *m = CreateOCMShareResponse{} }
func (m *CreateOCMShareResponse) String() string { return proto.CompactTextString(m) }
func (*CreateOCMShareResponse) ProtoMessage()    {}
func (*CreateOCMShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{1}
}

func (m *CreateOCMShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOCMShareResponse.Unmarshal(m, b)
}
func (m *CreateOCMShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOCMShareResponse.Marshal(b, m, deterministic)
}
func (m *CreateOCMShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOCMShareResponse.Merge(m, src)
}
func (m *CreateOCMShareResponse) XXX_Size() int {
	return xxx_messageInfo_CreateOCMShareResponse.Size(m)
}
func (m *CreateOCMShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOCMShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOCMShareResponse proto.InternalMessageInfo

func (m *CreateOCMShareResponse) GetStatus() *v1beta13.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateOCMShareResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *CreateOCMShareResponse) GetShare() *Share {
	if m != nil {
		return m.Share
	}
	return nil
}

type UpdateOCMShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	Ref                  *ShareReference                    `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Field                *UpdateOCMShareRequest_UpdateField `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *UpdateOCMShareRequest) Reset()         { *m = UpdateOCMShareRequest{} }
func (m *UpdateOCMShareRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOCMShareRequest) ProtoMessage()    {}
func (*UpdateOCMShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{2}
}

func (m *UpdateOCMShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOCMShareRequest.Unmarshal(m, b)
}
func (m *UpdateOCMShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOCMShareRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOCMShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOCMShareRequest.Merge(m, src)
}
func (m *UpdateOCMShareRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOCMShareRequest.Size(m)
}
func (m *UpdateOCMShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOCMShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOCMShareRequest proto.InternalMessageInfo

func (m *UpdateOCMShareRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *UpdateOCMShareRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *UpdateOCMShareRequest) GetField() *UpdateOCMShareRequest_UpdateField {
	if m != nil {
		return m.Field
	}
	return nil
}

// REQUIRED.
type UpdateOCMShareRequest_UpdateField struct {
	// One of the update fields MUST be specified.
	//
	// Types that are valid to be assigned to Field:
	//	*UpdateOCMShareRequest_UpdateField_Permissions
	//	*UpdateOCMShareRequest_UpdateField_DisplayName
	Field                isUpdateOCMShareRequest_UpdateField_Field `protobuf_oneof:"field"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *UpdateOCMShareRequest_UpdateField) Reset()         { *m = UpdateOCMShareRequest_UpdateField{} }
func (m *UpdateOCMShareRequest_UpdateField) String() string { return proto.CompactTextString(m) }
func (*UpdateOCMShareRequest_UpdateField) ProtoMessage()    {}
func (*UpdateOCMShareRequest_UpdateField) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{2, 0}
}

func (m *UpdateOCMShareRequest_UpdateField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOCMShareRequest_UpdateField.Unmarshal(m, b)
}
func (m *UpdateOCMShareRequest_UpdateField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOCMShareRequest_UpdateField.Marshal(b, m, deterministic)
}
func (m *UpdateOCMShareRequest_UpdateField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOCMShareRequest_UpdateField.Merge(m, src)
}
func (m *UpdateOCMShareRequest_UpdateField) XXX_Size() int {
	return xxx_messageInfo_UpdateOCMShareRequest_UpdateField.Size(m)
}
func (m *UpdateOCMShareRequest_UpdateField) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOCMShareRequest_UpdateField.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOCMShareRequest_UpdateField proto.InternalMessageInfo

type isUpdateOCMShareRequest_UpdateField_Field interface {
	isUpdateOCMShareRequest_UpdateField_Field()
}

type UpdateOCMShareRequest_UpdateField_Permissions struct {
	Permissions *SharePermissions `protobuf:"bytes,2,opt,name=permissions,proto3,oneof"`
}

type UpdateOCMShareRequest_UpdateField_DisplayName struct {
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3,oneof"`
}

func (*UpdateOCMShareRequest_UpdateField_Permissions) isUpdateOCMShareRequest_UpdateField_Field() {}

func (*UpdateOCMShareRequest_UpdateField_DisplayName) isUpdateOCMShareRequest_UpdateField_Field() {}

func (m *UpdateOCMShareRequest_UpdateField) GetField() isUpdateOCMShareRequest_UpdateField_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *UpdateOCMShareRequest_UpdateField) GetPermissions() *SharePermissions {
	if x, ok := m.GetField().(*UpdateOCMShareRequest_UpdateField_Permissions); ok {
		return x.Permissions
	}
	return nil
}

func (m *UpdateOCMShareRequest_UpdateField) GetDisplayName() string {
	if x, ok := m.GetField().(*UpdateOCMShareRequest_UpdateField_DisplayName); ok {
		return x.DisplayName
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UpdateOCMShareRequest_UpdateField) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UpdateOCMShareRequest_UpdateField_Permissions)(nil),
		(*UpdateOCMShareRequest_UpdateField_DisplayName)(nil),
	}
}

type UpdateOCMShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateOCMShareResponse) Reset()         { *m = UpdateOCMShareResponse{} }
func (m *UpdateOCMShareResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateOCMShareResponse) ProtoMessage()    {}
func (*UpdateOCMShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{3}
}

func (m *UpdateOCMShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOCMShareResponse.Unmarshal(m, b)
}
func (m *UpdateOCMShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOCMShareResponse.Marshal(b, m, deterministic)
}
func (m *UpdateOCMShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOCMShareResponse.Merge(m, src)
}
func (m *UpdateOCMShareResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateOCMShareResponse.Size(m)
}
func (m *UpdateOCMShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOCMShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOCMShareResponse proto.InternalMessageInfo

func (m *UpdateOCMShareResponse) GetStatus() *v1beta13.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UpdateOCMShareResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type ListOCMSharesRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// OPTIONAL.
	// The list of filters to apply if any.
	Filters              []*ListOCMSharesRequest_Filter `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *ListOCMSharesRequest) Reset()         { *m = ListOCMSharesRequest{} }
func (m *ListOCMSharesRequest) String() string { return proto.CompactTextString(m) }
func (*ListOCMSharesRequest) ProtoMessage()    {}
func (*ListOCMSharesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{4}
}

func (m *ListOCMSharesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOCMSharesRequest.Unmarshal(m, b)
}
func (m *ListOCMSharesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOCMSharesRequest.Marshal(b, m, deterministic)
}
func (m *ListOCMSharesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOCMSharesRequest.Merge(m, src)
}
func (m *ListOCMSharesRequest) XXX_Size() int {
	return xxx_messageInfo_ListOCMSharesRequest.Size(m)
}
func (m *ListOCMSharesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOCMSharesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOCMSharesRequest proto.InternalMessageInfo

func (m *ListOCMSharesRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *ListOCMSharesRequest) GetFilters() []*ListOCMSharesRequest_Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

// REQUIRED.
// represents a filter to apply to the request.
type ListOCMSharesRequest_Filter struct {
	// REQUIRED.
	Type ListOCMSharesRequest_Filter_Type `protobuf:"varint,2,opt,name=type,proto3,enum=cs3.sharing.ocm.v1beta1.ListOCMSharesRequest_Filter_Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Term:
	//	*ListOCMSharesRequest_Filter_Ref
	//	*ListOCMSharesRequest_Filter_Owner
	//	*ListOCMSharesRequest_Filter_Creator
	Term                 isListOCMSharesRequest_Filter_Term `protobuf_oneof:"term"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *ListOCMSharesRequest_Filter) Reset()         { *m = ListOCMSharesRequest_Filter{} }
func (m *ListOCMSharesRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*ListOCMSharesRequest_Filter) ProtoMessage()    {}
func (*ListOCMSharesRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{4, 0}
}

func (m *ListOCMSharesRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOCMSharesRequest_Filter.Unmarshal(m, b)
}
func (m *ListOCMSharesRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOCMSharesRequest_Filter.Marshal(b, m, deterministic)
}
func (m *ListOCMSharesRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOCMSharesRequest_Filter.Merge(m, src)
}
func (m *ListOCMSharesRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_ListOCMSharesRequest_Filter.Size(m)
}
func (m *ListOCMSharesRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOCMSharesRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListOCMSharesRequest_Filter proto.InternalMessageInfo

func (m *ListOCMSharesRequest_Filter) GetType() ListOCMSharesRequest_Filter_Type {
	if m != nil {
		return m.Type
	}
	return ListOCMSharesRequest_Filter_TYPE_INVALID
}

type isListOCMSharesRequest_Filter_Term interface {
	isListOCMSharesRequest_Filter_Term()
}

type ListOCMSharesRequest_Filter_Ref struct {
	Ref *v1beta11.Reference `protobuf:"bytes,3,opt,name=ref,proto3,oneof"`
}

type ListOCMSharesRequest_Filter_Owner struct {
	Owner *v1beta14.UserId `protobuf:"bytes,4,opt,name=owner,proto3,oneof"`
}

type ListOCMSharesRequest_Filter_Creator struct {
	Creator *v1beta14.UserId `protobuf:"bytes,5,opt,name=creator,proto3,oneof"`
}

func (*ListOCMSharesRequest_Filter_Ref) isListOCMSharesRequest_Filter_Term() {}

func (*ListOCMSharesRequest_Filter_Owner) isListOCMSharesRequest_Filter_Term() {}

func (*ListOCMSharesRequest_Filter_Creator) isListOCMSharesRequest_Filter_Term() {}

func (m *ListOCMSharesRequest_Filter) GetTerm() isListOCMSharesRequest_Filter_Term {
	if m != nil {
		return m.Term
	}
	return nil
}

func (m *ListOCMSharesRequest_Filter) GetRef() *v1beta11.Reference {
	if x, ok := m.GetTerm().(*ListOCMSharesRequest_Filter_Ref); ok {
		return x.Ref
	}
	return nil
}

func (m *ListOCMSharesRequest_Filter) GetOwner() *v1beta14.UserId {
	if x, ok := m.GetTerm().(*ListOCMSharesRequest_Filter_Owner); ok {
		return x.Owner
	}
	return nil
}

func (m *ListOCMSharesRequest_Filter) GetCreator() *v1beta14.UserId {
	if x, ok := m.GetTerm().(*ListOCMSharesRequest_Filter_Creator); ok {
		return x.Creator
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListOCMSharesRequest_Filter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListOCMSharesRequest_Filter_Ref)(nil),
		(*ListOCMSharesRequest_Filter_Owner)(nil),
		(*ListOCMSharesRequest_Filter_Creator)(nil),
	}
}

type ListOCMSharesResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The list of shares.
	Shares               []*Share `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOCMSharesResponse) Reset()         { *m = ListOCMSharesResponse{} }
func (m *ListOCMSharesResponse) String() string { return proto.CompactTextString(m) }
func (*ListOCMSharesResponse) ProtoMessage()    {}
func (*ListOCMSharesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{5}
}

func (m *ListOCMSharesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOCMSharesResponse.Unmarshal(m, b)
}
func (m *ListOCMSharesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOCMSharesResponse.Marshal(b, m, deterministic)
}
func (m *ListOCMSharesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOCMSharesResponse.Merge(m, src)
}
func (m *ListOCMSharesResponse) XXX_Size() int {
	return xxx_messageInfo_ListOCMSharesResponse.Size(m)
}
func (m *ListOCMSharesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOCMSharesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOCMSharesResponse proto.InternalMessageInfo

func (m *ListOCMSharesResponse) GetStatus() *v1beta13.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListOCMSharesResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *ListOCMSharesResponse) GetShares() []*Share {
	if m != nil {
		return m.Shares
	}
	return nil
}

type RemoveOCMShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The reference to which the action should be performed.
	Ref                  *ShareReference `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RemoveOCMShareRequest) Reset()         { *m = RemoveOCMShareRequest{} }
func (m *RemoveOCMShareRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveOCMShareRequest) ProtoMessage()    {}
func (*RemoveOCMShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{6}
}

func (m *RemoveOCMShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveOCMShareRequest.Unmarshal(m, b)
}
func (m *RemoveOCMShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveOCMShareRequest.Marshal(b, m, deterministic)
}
func (m *RemoveOCMShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveOCMShareRequest.Merge(m, src)
}
func (m *RemoveOCMShareRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveOCMShareRequest.Size(m)
}
func (m *RemoveOCMShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveOCMShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveOCMShareRequest proto.InternalMessageInfo

func (m *RemoveOCMShareRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *RemoveOCMShareRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

type RemoveOCMShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RemoveOCMShareResponse) Reset()         { *m = RemoveOCMShareResponse{} }
func (m *RemoveOCMShareResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveOCMShareResponse) ProtoMessage()    {}
func (*RemoveOCMShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{7}
}

func (m *RemoveOCMShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveOCMShareResponse.Unmarshal(m, b)
}
func (m *RemoveOCMShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveOCMShareResponse.Marshal(b, m, deterministic)
}
func (m *RemoveOCMShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveOCMShareResponse.Merge(m, src)
}
func (m *RemoveOCMShareResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveOCMShareResponse.Size(m)
}
func (m *RemoveOCMShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveOCMShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveOCMShareResponse proto.InternalMessageInfo

func (m *RemoveOCMShareResponse) GetStatus() *v1beta13.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RemoveOCMShareResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type GetOCMShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The reference to which the action should be performed.
	Ref                  *ShareReference `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetOCMShareRequest) Reset()         { *m = GetOCMShareRequest{} }
func (m *GetOCMShareRequest) String() string { return proto.CompactTextString(m) }
func (*GetOCMShareRequest) ProtoMessage()    {}
func (*GetOCMShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{8}
}

func (m *GetOCMShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOCMShareRequest.Unmarshal(m, b)
}
func (m *GetOCMShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOCMShareRequest.Marshal(b, m, deterministic)
}
func (m *GetOCMShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOCMShareRequest.Merge(m, src)
}
func (m *GetOCMShareRequest) XXX_Size() int {
	return xxx_messageInfo_GetOCMShareRequest.Size(m)
}
func (m *GetOCMShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOCMShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOCMShareRequest proto.InternalMessageInfo

func (m *GetOCMShareRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GetOCMShareRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

type GetOCMShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The share.
	Share                *Share   `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOCMShareResponse) Reset()         { *m = GetOCMShareResponse{} }
func (m *GetOCMShareResponse) String() string { return proto.CompactTextString(m) }
func (*GetOCMShareResponse) ProtoMessage()    {}
func (*GetOCMShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{9}
}

func (m *GetOCMShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOCMShareResponse.Unmarshal(m, b)
}
func (m *GetOCMShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOCMShareResponse.Marshal(b, m, deterministic)
}
func (m *GetOCMShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOCMShareResponse.Merge(m, src)
}
func (m *GetOCMShareResponse) XXX_Size() int {
	return xxx_messageInfo_GetOCMShareResponse.Size(m)
}
func (m *GetOCMShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOCMShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOCMShareResponse proto.InternalMessageInfo

func (m *GetOCMShareResponse) GetStatus() *v1beta13.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetOCMShareResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GetOCMShareResponse) GetShare() *Share {
	if m != nil {
		return m.Share
	}
	return nil
}

type ListReceivedOCMSharesRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListReceivedOCMSharesRequest) Reset()         { *m = ListReceivedOCMSharesRequest{} }
func (m *ListReceivedOCMSharesRequest) String() string { return proto.CompactTextString(m) }
func (*ListReceivedOCMSharesRequest) ProtoMessage()    {}
func (*ListReceivedOCMSharesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{10}
}

func (m *ListReceivedOCMSharesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReceivedOCMSharesRequest.Unmarshal(m, b)
}
func (m *ListReceivedOCMSharesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReceivedOCMSharesRequest.Marshal(b, m, deterministic)
}
func (m *ListReceivedOCMSharesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReceivedOCMSharesRequest.Merge(m, src)
}
func (m *ListReceivedOCMSharesRequest) XXX_Size() int {
	return xxx_messageInfo_ListReceivedOCMSharesRequest.Size(m)
}
func (m *ListReceivedOCMSharesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReceivedOCMSharesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListReceivedOCMSharesRequest proto.InternalMessageInfo

func (m *ListReceivedOCMSharesRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type ListReceivedOCMSharesResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The list of received shares.
	Shares               []*ReceivedShare `protobuf:"bytes,3,rep,name=shares,proto3" json:"shares,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListReceivedOCMSharesResponse) Reset()         { *m = ListReceivedOCMSharesResponse{} }
func (m *ListReceivedOCMSharesResponse) String() string { return proto.CompactTextString(m) }
func (*ListReceivedOCMSharesResponse) ProtoMessage()    {}
func (*ListReceivedOCMSharesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{11}
}

func (m *ListReceivedOCMSharesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReceivedOCMSharesResponse.Unmarshal(m, b)
}
func (m *ListReceivedOCMSharesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReceivedOCMSharesResponse.Marshal(b, m, deterministic)
}
func (m *ListReceivedOCMSharesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReceivedOCMSharesResponse.Merge(m, src)
}
func (m *ListReceivedOCMSharesResponse) XXX_Size() int {
	return xxx_messageInfo_ListReceivedOCMSharesResponse.Size(m)
}
func (m *ListReceivedOCMSharesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReceivedOCMSharesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListReceivedOCMSharesResponse proto.InternalMessageInfo

func (m *ListReceivedOCMSharesResponse) GetStatus() *v1beta13.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListReceivedOCMSharesResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *ListReceivedOCMSharesResponse) GetShares() []*ReceivedShare {
	if m != nil {
		return m.Shares
	}
	return nil
}

// TODO(labkode): clean up display_name ? we'll use storage links for that.
type UpdateReceivedOCMShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	Ref                  *ShareReference                            `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	Field                *UpdateReceivedOCMShareRequest_UpdateField `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *UpdateReceivedOCMShareRequest) Reset()         { *m = UpdateReceivedOCMShareRequest{} }
func (m *UpdateReceivedOCMShareRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateReceivedOCMShareRequest) ProtoMessage()    {}
func (*UpdateReceivedOCMShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{12}
}

func (m *UpdateReceivedOCMShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReceivedOCMShareRequest.Unmarshal(m, b)
}
func (m *UpdateReceivedOCMShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReceivedOCMShareRequest.Marshal(b, m, deterministic)
}
func (m *UpdateReceivedOCMShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReceivedOCMShareRequest.Merge(m, src)
}
func (m *UpdateReceivedOCMShareRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateReceivedOCMShareRequest.Size(m)
}
func (m *UpdateReceivedOCMShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReceivedOCMShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReceivedOCMShareRequest proto.InternalMessageInfo

func (m *UpdateReceivedOCMShareRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *UpdateReceivedOCMShareRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *UpdateReceivedOCMShareRequest) GetField() *UpdateReceivedOCMShareRequest_UpdateField {
	if m != nil {
		return m.Field
	}
	return nil
}

// REQUIRED.
type UpdateReceivedOCMShareRequest_UpdateField struct {
	// One of the update fields MUST be specified.
	//
	// Types that are valid to be assigned to Field:
	//	*UpdateReceivedOCMShareRequest_UpdateField_DisplayName
	//	*UpdateReceivedOCMShareRequest_UpdateField_State
	Field                isUpdateReceivedOCMShareRequest_UpdateField_Field `protobuf_oneof:"field"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *UpdateReceivedOCMShareRequest_UpdateField) Reset() {
	*m = UpdateReceivedOCMShareRequest_UpdateField{}
}
func (m *UpdateReceivedOCMShareRequest_UpdateField) String() string {
	return proto.CompactTextString(m)
}
func (*UpdateReceivedOCMShareRequest_UpdateField) ProtoMessage() {}
func (*UpdateReceivedOCMShareRequest_UpdateField) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{12, 0}
}

func (m *UpdateReceivedOCMShareRequest_UpdateField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReceivedOCMShareRequest_UpdateField.Unmarshal(m, b)
}
func (m *UpdateReceivedOCMShareRequest_UpdateField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReceivedOCMShareRequest_UpdateField.Marshal(b, m, deterministic)
}
func (m *UpdateReceivedOCMShareRequest_UpdateField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReceivedOCMShareRequest_UpdateField.Merge(m, src)
}
func (m *UpdateReceivedOCMShareRequest_UpdateField) XXX_Size() int {
	return xxx_messageInfo_UpdateReceivedOCMShareRequest_UpdateField.Size(m)
}
func (m *UpdateReceivedOCMShareRequest_UpdateField) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReceivedOCMShareRequest_UpdateField.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReceivedOCMShareRequest_UpdateField proto.InternalMessageInfo

type isUpdateReceivedOCMShareRequest_UpdateField_Field interface {
	isUpdateReceivedOCMShareRequest_UpdateField_Field()
}

type UpdateReceivedOCMShareRequest_UpdateField_DisplayName struct {
	DisplayName string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3,oneof"`
}

type UpdateReceivedOCMShareRequest_UpdateField_State struct {
	State ShareState `protobuf:"varint,2,opt,name=state,proto3,enum=cs3.sharing.ocm.v1beta1.ShareState,oneof"`
}

func (*UpdateReceivedOCMShareRequest_UpdateField_DisplayName) isUpdateReceivedOCMShareRequest_UpdateField_Field() {
}

func (*UpdateReceivedOCMShareRequest_UpdateField_State) isUpdateReceivedOCMShareRequest_UpdateField_Field() {
}

func (m *UpdateReceivedOCMShareRequest_UpdateField) GetField() isUpdateReceivedOCMShareRequest_UpdateField_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *UpdateReceivedOCMShareRequest_UpdateField) GetDisplayName() string {
	if x, ok := m.GetField().(*UpdateReceivedOCMShareRequest_UpdateField_DisplayName); ok {
		return x.DisplayName
	}
	return ""
}

func (m *UpdateReceivedOCMShareRequest_UpdateField) GetState() ShareState {
	if x, ok := m.GetField().(*UpdateReceivedOCMShareRequest_UpdateField_State); ok {
		return x.State
	}
	return ShareState_SHARE_STATE_INVALID
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UpdateReceivedOCMShareRequest_UpdateField) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UpdateReceivedOCMShareRequest_UpdateField_DisplayName)(nil),
		(*UpdateReceivedOCMShareRequest_UpdateField_State)(nil),
	}
}

type UpdateReceivedOCMShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque               *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UpdateReceivedOCMShareResponse) Reset()         { *m = UpdateReceivedOCMShareResponse{} }
func (m *UpdateReceivedOCMShareResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateReceivedOCMShareResponse) ProtoMessage()    {}
func (*UpdateReceivedOCMShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{13}
}

func (m *UpdateReceivedOCMShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReceivedOCMShareResponse.Unmarshal(m, b)
}
func (m *UpdateReceivedOCMShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReceivedOCMShareResponse.Marshal(b, m, deterministic)
}
func (m *UpdateReceivedOCMShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReceivedOCMShareResponse.Merge(m, src)
}
func (m *UpdateReceivedOCMShareResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateReceivedOCMShareResponse.Size(m)
}
func (m *UpdateReceivedOCMShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReceivedOCMShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReceivedOCMShareResponse proto.InternalMessageInfo

func (m *UpdateReceivedOCMShareResponse) GetStatus() *v1beta13.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UpdateReceivedOCMShareResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

type GetReceivedOCMShareRequest struct {
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,1,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The reference of the received share.
	Ref                  *ShareReference `protobuf:"bytes,2,opt,name=ref,proto3" json:"ref,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetReceivedOCMShareRequest) Reset()         { *m = GetReceivedOCMShareRequest{} }
func (m *GetReceivedOCMShareRequest) String() string { return proto.CompactTextString(m) }
func (*GetReceivedOCMShareRequest) ProtoMessage()    {}
func (*GetReceivedOCMShareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{14}
}

func (m *GetReceivedOCMShareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReceivedOCMShareRequest.Unmarshal(m, b)
}
func (m *GetReceivedOCMShareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReceivedOCMShareRequest.Marshal(b, m, deterministic)
}
func (m *GetReceivedOCMShareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReceivedOCMShareRequest.Merge(m, src)
}
func (m *GetReceivedOCMShareRequest) XXX_Size() int {
	return xxx_messageInfo_GetReceivedOCMShareRequest.Size(m)
}
func (m *GetReceivedOCMShareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReceivedOCMShareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetReceivedOCMShareRequest proto.InternalMessageInfo

func (m *GetReceivedOCMShareRequest) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GetReceivedOCMShareRequest) GetRef() *ShareReference {
	if m != nil {
		return m.Ref
	}
	return nil
}

type GetReceivedOCMShareResponse struct {
	// REQUIRED.
	// The response status.
	Status *v1beta13.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// OPTIONAL.
	// Opaque information.
	Opaque *v1beta1.Opaque `protobuf:"bytes,2,opt,name=opaque,proto3" json:"opaque,omitempty"`
	// REQUIRED.
	// The share.
	Share                *ReceivedShare `protobuf:"bytes,3,opt,name=share,proto3" json:"share,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetReceivedOCMShareResponse) Reset()         { *m = GetReceivedOCMShareResponse{} }
func (m *GetReceivedOCMShareResponse) String() string { return proto.CompactTextString(m) }
func (*GetReceivedOCMShareResponse) ProtoMessage()    {}
func (*GetReceivedOCMShareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1231a7f0a479a0, []int{15}
}

func (m *GetReceivedOCMShareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReceivedOCMShareResponse.Unmarshal(m, b)
}
func (m *GetReceivedOCMShareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReceivedOCMShareResponse.Marshal(b, m, deterministic)
}
func (m *GetReceivedOCMShareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReceivedOCMShareResponse.Merge(m, src)
}
func (m *GetReceivedOCMShareResponse) XXX_Size() int {
	return xxx_messageInfo_GetReceivedOCMShareResponse.Size(m)
}
func (m *GetReceivedOCMShareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReceivedOCMShareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetReceivedOCMShareResponse proto.InternalMessageInfo

func (m *GetReceivedOCMShareResponse) GetStatus() *v1beta13.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetReceivedOCMShareResponse) GetOpaque() *v1beta1.Opaque {
	if m != nil {
		return m.Opaque
	}
	return nil
}

func (m *GetReceivedOCMShareResponse) GetShare() *ReceivedShare {
	if m != nil {
		return m.Share
	}
	return nil
}

func init() {
	proto.RegisterEnum("cs3.sharing.ocm.v1beta1.ListOCMSharesRequest_Filter_Type", ListOCMSharesRequest_Filter_Type_name, ListOCMSharesRequest_Filter_Type_value)
	proto.RegisterType((*CreateOCMShareRequest)(nil), "cs3.sharing.ocm.v1beta1.CreateOCMShareRequest")
	proto.RegisterType((*CreateOCMShareResponse)(nil), "cs3.sharing.ocm.v1beta1.CreateOCMShareResponse")
	proto.RegisterType((*UpdateOCMShareRequest)(nil), "cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest")
	proto.RegisterType((*UpdateOCMShareRequest_UpdateField)(nil), "cs3.sharing.ocm.v1beta1.UpdateOCMShareRequest.UpdateField")
	proto.RegisterType((*UpdateOCMShareResponse)(nil), "cs3.sharing.ocm.v1beta1.UpdateOCMShareResponse")
	proto.RegisterType((*ListOCMSharesRequest)(nil), "cs3.sharing.ocm.v1beta1.ListOCMSharesRequest")
	proto.RegisterType((*ListOCMSharesRequest_Filter)(nil), "cs3.sharing.ocm.v1beta1.ListOCMSharesRequest.Filter")
	proto.RegisterType((*ListOCMSharesResponse)(nil), "cs3.sharing.ocm.v1beta1.ListOCMSharesResponse")
	proto.RegisterType((*RemoveOCMShareRequest)(nil), "cs3.sharing.ocm.v1beta1.RemoveOCMShareRequest")
	proto.RegisterType((*RemoveOCMShareResponse)(nil), "cs3.sharing.ocm.v1beta1.RemoveOCMShareResponse")
	proto.RegisterType((*GetOCMShareRequest)(nil), "cs3.sharing.ocm.v1beta1.GetOCMShareRequest")
	proto.RegisterType((*GetOCMShareResponse)(nil), "cs3.sharing.ocm.v1beta1.GetOCMShareResponse")
	proto.RegisterType((*ListReceivedOCMSharesRequest)(nil), "cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesRequest")
	proto.RegisterType((*ListReceivedOCMSharesResponse)(nil), "cs3.sharing.ocm.v1beta1.ListReceivedOCMSharesResponse")
	proto.RegisterType((*UpdateReceivedOCMShareRequest)(nil), "cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest")
	proto.RegisterType((*UpdateReceivedOCMShareRequest_UpdateField)(nil), "cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareRequest.UpdateField")
	proto.RegisterType((*UpdateReceivedOCMShareResponse)(nil), "cs3.sharing.ocm.v1beta1.UpdateReceivedOCMShareResponse")
	proto.RegisterType((*GetReceivedOCMShareRequest)(nil), "cs3.sharing.ocm.v1beta1.GetReceivedOCMShareRequest")
	proto.RegisterType((*GetReceivedOCMShareResponse)(nil), "cs3.sharing.ocm.v1beta1.GetReceivedOCMShareResponse")
}

func init() {
	proto.RegisterFile("cs3/sharing/ocm/v1beta1/ocm_api.proto", fileDescriptor_3b1231a7f0a479a0)
}

var fileDescriptor_3b1231a7f0a479a0 = []byte{
	// 1112 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x5d, 0x6f, 0x1b, 0x45,
	0x17, 0xce, 0xfa, 0x2b, 0x7a, 0x8f, 0xfb, 0x46, 0xd6, 0x14, 0x37, 0xee, 0xb6, 0xa9, 0x60, 0x2b,
	0xda, 0x54, 0x94, 0xb5, 0xf2, 0x41, 0x50, 0x28, 0x20, 0xc5, 0xae, 0x93, 0x58, 0x6a, 0xbc, 0x66,
	0x1a, 0xc2, 0x87, 0x22, 0xac, 0xed, 0x7a, 0x92, 0xac, 0x94, 0xfd, 0xc8, 0xcc, 0x3a, 0x10, 0x89,
	0x0b, 0x84, 0x00, 0x89, 0xde, 0xf0, 0x17, 0x10, 0x57, 0x88, 0x1b, 0x24, 0xf8, 0x01, 0x5c, 0xc0,
	0x15, 0xb7, 0xfc, 0x02, 0x24, 0x7e, 0x08, 0x9a, 0xd9, 0x59, 0xdb, 0xeb, 0x78, 0x1d, 0xbb, 0x80,
	0xd3, 0xbb, 0x78, 0xce, 0xf3, 0x9c, 0xf3, 0xec, 0x99, 0x99, 0x73, 0xce, 0x04, 0x5e, 0xb6, 0xd8,
	0x4a, 0x99, 0x1d, 0x99, 0xd4, 0x76, 0x0f, 0xcb, 0x9e, 0xe5, 0x94, 0x4f, 0x97, 0x9e, 0x90, 0xc0,
	0x5c, 0xe2, 0x7f, 0xb7, 0x4c, 0xdf, 0xd6, 0x7d, 0xea, 0x05, 0x1e, 0x9a, 0xb7, 0xd8, 0x8a, 0x2e,
	0x61, 0xba, 0x67, 0x39, 0xba, 0x84, 0xa9, 0xf7, 0x38, 0xdf, 0x6e, 0x13, 0x37, 0xb0, 0x83, 0xb3,
	0x72, 0x87, 0x11, 0xda, 0xf5, 0x40, 0x09, 0xf3, 0x3a, 0xd4, 0x22, 0x2c, 0xf4, 0xa1, 0x2e, 0x72,
	0x28, 0x0f, 0xe1, 0x53, 0xef, 0xd4, 0x6e, 0x8f, 0x40, 0xde, 0xe4, 0x48, 0xea, 0x5b, 0x5d, 0x00,
	0x0b, 0xcc, 0xa0, 0x13, 0x59, 0xef, 0x26, 0x49, 0x1e, 0x74, 0x73, 0x5f, 0x00, 0x03, 0x8f, 0x9a,
	0x87, 0xe4, 0xe2, 0xa0, 0x0b, 0x1c, 0x1d, 0x9c, 0xf9, 0x84, 0x75, 0x21, 0xe2, 0x57, 0x68, 0xd6,
	0xbe, 0x4d, 0x41, 0xb1, 0x4a, 0x89, 0x19, 0x10, 0xa3, 0xba, 0xf3, 0xf8, 0xc8, 0xa4, 0x04, 0x93,
	0x93, 0x0e, 0x61, 0x01, 0x5a, 0x82, 0x9c, 0xe7, 0x9b, 0x27, 0x1d, 0x52, 0x52, 0x5e, 0x54, 0x16,
	0xf3, 0xcb, 0xd7, 0x75, 0x9e, 0xac, 0x90, 0x2b, 0x3d, 0xe9, 0x86, 0x00, 0x60, 0x09, 0x44, 0xeb,
	0x90, 0xa6, 0xe4, 0xa0, 0x94, 0x12, 0xf8, 0xbb, 0x02, 0x2f, 0x75, 0xea, 0x91, 0xce, 0x2e, 0x15,
	0x93, 0x03, 0x42, 0x89, 0x6b, 0x11, 0xcc, 0x39, 0x68, 0x1d, 0xb2, 0x87, 0xd4, 0x74, 0x83, 0x52,
	0x5a, 0x90, 0x6f, 0xeb, 0x09, 0x3b, 0xa3, 0x0b, 0x8d, 0x5b, 0x1c, 0x8a, 0x43, 0x06, 0xfa, 0x08,
	0xe6, 0x29, 0xb1, 0x6c, 0xdf, 0x26, 0x6e, 0xd0, 0x72, 0x08, 0x3b, 0x6a, 0x45, 0xc1, 0x4a, 0x19,
	0xe1, 0xec, 0x8e, 0x70, 0xc6, 0x9d, 0x9c, 0x53, 0xd1, 0x94, 0x0b, 0x75, 0xf7, 0xc0, 0xc3, 0xc5,
	0xae, 0x9b, 0x1d, 0xc2, 0x8e, 0x22, 0x93, 0xf6, 0x93, 0x02, 0xd7, 0x06, 0x53, 0xc4, 0x7c, 0xcf,
	0x65, 0x04, 0x95, 0x21, 0x17, 0xee, 0xa1, 0xcc, 0xd1, 0xbc, 0x88, 0x44, 0x7d, 0xab, 0x27, 0x57,
	0x98, 0xb1, 0x84, 0xf5, 0x25, 0x35, 0x35, 0x6e, 0x52, 0x57, 0x21, 0xcb, 0xf3, 0x40, 0x64, 0x66,
	0x6e, 0x8d, 0xce, 0x0c, 0x0e, 0xc1, 0xda, 0x5f, 0x29, 0x28, 0xbe, 0xeb, 0xb7, 0xff, 0xbb, 0x7d,
	0x4d, 0x14, 0x10, 0xdf, 0xd7, 0x26, 0x64, 0x0f, 0x6c, 0x72, 0xdc, 0x96, 0xea, 0xdf, 0x48, 0x24,
	0x0f, 0x15, 0x2b, 0x57, 0x37, 0xb9, 0x07, 0x1c, 0x3a, 0x52, 0x9f, 0x2a, 0x90, 0xef, 0x5b, 0x46,
	0x3b, 0x90, 0xf7, 0x09, 0x75, 0x6c, 0xc6, 0x6c, 0xcf, 0x65, 0x52, 0xe4, 0xbd, 0xd1, 0x22, 0x9b,
	0x3d, 0xc2, 0xf6, 0x0c, 0xee, 0xe7, 0xa3, 0xdb, 0x70, 0xa5, 0x6d, 0x33, 0xff, 0xd8, 0x3c, 0x6b,
	0xb9, 0xa6, 0x13, 0x66, 0xfd, 0x7f, 0x1c, 0x24, 0x57, 0x1b, 0xa6, 0x43, 0x2a, 0xb3, 0xf2, 0xab,
	0xb4, 0x4f, 0xe1, 0xda, 0xa0, 0xf0, 0xe9, 0x1d, 0x0d, 0xed, 0xb7, 0x0c, 0xbc, 0xf0, 0xc8, 0x66,
	0x41, 0x14, 0x9c, 0xfd, 0x83, 0x3d, 0x6e, 0xc0, 0xec, 0x81, 0x7d, 0x1c, 0x10, 0xca, 0x53, 0x98,
	0x5e, 0xcc, 0x2f, 0xaf, 0x26, 0xa6, 0x70, 0x58, 0x48, 0x7d, 0x53, 0x90, 0x71, 0xe4, 0x44, 0xfd,
	0x3e, 0x0d, 0xb9, 0x70, 0x0d, 0xed, 0x40, 0x86, 0x87, 0x16, 0xdf, 0x35, 0xb7, 0xbc, 0xfe, 0x2c,
	0x7e, 0xf5, 0xdd, 0x33, 0x9f, 0x60, 0xe1, 0x06, 0x3d, 0x08, 0x4f, 0x63, 0x7a, 0xa2, 0x2a, 0xb3,
	0x3d, 0xd3, 0xad, 0x33, 0xde, 0xc7, 0x6e, 0xb7, 0x34, 0xbc, 0x24, 0xe8, 0x51, 0xa1, 0xd7, 0x79,
	0xa1, 0xef, 0x9d, 0x48, 0x46, 0x68, 0xbd, 0xbd, 0x3d, 0x83, 0x43, 0x06, 0x7a, 0x0b, 0x66, 0x2d,
	0x5e, 0x06, 0x3c, 0x5a, 0xca, 0x8e, 0x4f, 0x8e, 0x38, 0xda, 0x37, 0x0a, 0x64, 0xf8, 0x57, 0xa0,
	0x02, 0x5c, 0xd9, 0xfd, 0xa0, 0x59, 0x6b, 0xd5, 0x1b, 0x7b, 0x1b, 0x8f, 0xea, 0x0f, 0x0b, 0x33,
	0x28, 0x0f, 0xb3, 0x62, 0xa5, 0x61, 0x14, 0x14, 0x84, 0x60, 0x4e, 0xfc, 0xc0, 0xb5, 0xcd, 0x1a,
	0xae, 0x35, 0xaa, 0xb5, 0x42, 0x0a, 0xcd, 0x01, 0x88, 0x35, 0xe3, 0xbd, 0x46, 0x0d, 0x17, 0xd2,
	0x5d, 0x17, 0x55, 0x5c, 0xdb, 0xd8, 0x35, 0x70, 0x21, 0x83, 0xe6, 0xe1, 0x6a, 0x0f, 0xd1, 0x6a,
	0x62, 0x63, 0xaf, 0xfe, 0xb0, 0x86, 0x0b, 0x59, 0x74, 0x1d, 0x8a, 0xfd, 0xd0, 0x9e, 0x29, 0x57,
	0xc9, 0x41, 0x26, 0x20, 0xd4, 0xd1, 0x7e, 0x56, 0xa0, 0x38, 0x90, 0xfb, 0x29, 0xd6, 0xb7, 0x35,
	0xc8, 0x89, 0x92, 0xc5, 0x4a, 0x69, 0x71, 0xee, 0x2e, 0x2a, 0x70, 0x12, 0xad, 0x7d, 0xa9, 0x40,
	0x11, 0x13, 0xc7, 0x3b, 0xbd, 0xdc, 0x0a, 0xc7, 0x4b, 0xc0, 0xa0, 0x8c, 0x29, 0x96, 0x80, 0xcf,
	0x15, 0x40, 0x5b, 0x24, 0xb8, 0xdc, 0x14, 0xfc, 0xa8, 0xc0, 0xd5, 0x98, 0x88, 0xe7, 0xbe, 0x3d,
	0xbe, 0x03, 0x37, 0xf9, 0x89, 0xc7, 0xc4, 0x22, 0xf6, 0x29, 0x69, 0xff, 0x0b, 0x05, 0x54, 0xfb,
	0x55, 0x81, 0x85, 0x04, 0x9f, 0x53, 0x4c, 0xc7, 0xdb, 0x03, 0xb7, 0xe9, 0x4e, 0x62, 0x3e, 0x22,
	0x9d, 0xf1, 0x5b, 0xf5, 0x67, 0x0a, 0x16, 0xc2, 0x8e, 0x36, 0xf8, 0x1d, 0x97, 0x33, 0x3f, 0xbc,
	0x1f, 0x9f, 0x1f, 0x2a, 0x17, 0xcc, 0x0f, 0x09, 0xa2, 0x87, 0xcd, 0x11, 0x9f, 0xc4, 0xc7, 0x88,
	0xc1, 0xbe, 0xaf, 0x0c, 0xe9, 0xfb, 0xe8, 0x01, 0x64, 0xf9, 0xd6, 0x44, 0xad, 0xec, 0x82, 0x29,
	0x95, 0xef, 0x26, 0x6f, 0x3c, 0x21, 0xa7, 0x37, 0x34, 0x7c, 0xa1, 0xc0, 0xad, 0x24, 0xb9, 0x53,
	0x2c, 0x1d, 0x4f, 0x15, 0x50, 0xb7, 0x48, 0xf0, 0x5c, 0xec, 0xb3, 0xf6, 0x8b, 0x02, 0x37, 0x86,
	0x8a, 0x99, 0xe2, 0xdd, 0x79, 0x33, 0x5e, 0x4a, 0xc6, 0xbd, 0x3a, 0x21, 0x69, 0xf9, 0x8f, 0x59,
	0xc8, 0x19, 0x96, 0xb3, 0xd1, 0xac, 0xa3, 0x13, 0x98, 0x8b, 0x3f, 0x18, 0x90, 0x9e, 0xe8, 0x6b,
	0xe8, 0xe3, 0x4b, 0x2d, 0x8f, 0x8d, 0x97, 0xf9, 0x39, 0x81, 0xb9, 0x78, 0x17, 0x1a, 0x11, 0x72,
	0x68, 0xd7, 0x1c, 0x11, 0x32, 0xa1, 0xbd, 0x1d, 0x41, 0xbe, 0xaf, 0xe8, 0xa3, 0x57, 0x12, 0xf9,
	0xe7, 0xfb, 0x93, 0x7a, 0x7f, 0x3c, 0xb0, 0x8c, 0xe4, 0xc2, 0xff, 0x63, 0xf3, 0x09, 0x7a, 0x75,
	0xa2, 0x19, 0x52, 0xd5, 0xc7, 0x85, 0xf7, 0x92, 0x19, 0x9f, 0xea, 0x47, 0x24, 0x73, 0xe8, 0xbb,
	0x65, 0x44, 0x32, 0x13, 0x9e, 0x0b, 0x5f, 0xc9, 0x19, 0xec, 0x5c, 0xf7, 0x40, 0xaf, 0x8d, 0x14,
	0x9f, 0xd4, 0xc1, 0xd4, 0xb5, 0x49, 0x69, 0x52, 0xc8, 0xd7, 0x4a, 0xf4, 0xa4, 0x19, 0xc4, 0xa0,
	0xb5, 0x67, 0x2b, 0xbe, 0xea, 0xeb, 0x13, 0xf3, 0xa4, 0x96, 0xcf, 0xc2, 0xb9, 0xe2, 0x9c, 0x90,
	0x95, 0x51, 0xa7, 0x27, 0x49, 0xc5, 0xea, 0x64, 0xa4, 0x50, 0x42, 0x85, 0xc2, 0x0d, 0xcb, 0x73,
	0x92, 0xa8, 0x95, 0x3c, 0xbf, 0xf1, 0xbe, 0xdd, 0xa4, 0x5e, 0xe0, 0x35, 0x95, 0x0f, 0xc1, 0xb3,
	0x1c, 0x69, 0xfa, 0x2e, 0x95, 0xae, 0x3e, 0x36, 0x7e, 0x48, 0xcd, 0x57, 0xd9, 0x8a, 0xa8, 0x78,
	0x9c, 0x6a, 0x58, 0x8e, 0xbe, 0xb7, 0x54, 0xe1, 0xf6, 0xdf, 0x85, 0x65, 0x5f, 0x5a, 0xf6, 0x0d,
	0xcb, 0xd9, 0x97, 0x96, 0x27, 0x39, 0xf1, 0xaf, 0x99, 0x95, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x8d, 0x0d, 0x92, 0x75, 0xc5, 0x12, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OcmAPIClient is the client API for OcmAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OcmAPIClient interface {
	// Creates a new ocm share.
	// MUST return CODE_NOT_FOUND if the resource reference does not exist.
	// MUST return CODE_ALREADY_EXISTS if the share already exists for the 4-tuple consisting of
	// (owner, shared_resource, grantee).
	// New shares MUST be created in the state SHARE_STATE_PENDING.
	CreateOCMShare(ctx context.Context, in *CreateOCMShareRequest, opts ...grpc.CallOption) (*CreateOCMShareResponse, error)
	// Removes a share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	RemoveOCMShare(ctx context.Context, in *RemoveOCMShareRequest, opts ...grpc.CallOption) (*RemoveOCMShareResponse, error)
	// Gets share information for a single share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	GetOCMShare(ctx context.Context, in *GetOCMShareRequest, opts ...grpc.CallOption) (*GetOCMShareResponse, error)
	// List the shares the authenticated principal has created,
	// both as owner and creator. If a filter is specified, only
	// shares satisfying the filter MUST be returned.
	ListOCMShares(ctx context.Context, in *ListOCMSharesRequest, opts ...grpc.CallOption) (*ListOCMSharesResponse, error)
	// Updates a share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	UpdateOCMShare(ctx context.Context, in *UpdateOCMShareRequest, opts ...grpc.CallOption) (*UpdateOCMShareResponse, error)
	// List all shares the authenticated principal has received.
	ListReceivedOCMShares(ctx context.Context, in *ListReceivedOCMSharesRequest, opts ...grpc.CallOption) (*ListReceivedOCMSharesResponse, error)
	// Update the received share to change the share state or the display name.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	UpdateReceivedOCMShare(ctx context.Context, in *UpdateReceivedOCMShareRequest, opts ...grpc.CallOption) (*UpdateReceivedOCMShareResponse, error)
	// Get the information for the given received share reference.
	// MUST return CODE_NOT_FOUND if the received share reference does not exist.
	GetReceivedOCMShare(ctx context.Context, in *GetReceivedOCMShareRequest, opts ...grpc.CallOption) (*GetReceivedOCMShareResponse, error)
}

type ocmAPIClient struct {
	cc *grpc.ClientConn
}

func NewOcmAPIClient(cc *grpc.ClientConn) OcmAPIClient {
	return &ocmAPIClient{cc}
}

func (c *ocmAPIClient) CreateOCMShare(ctx context.Context, in *CreateOCMShareRequest, opts ...grpc.CallOption) (*CreateOCMShareResponse, error) {
	out := new(CreateOCMShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.sharing.ocm.v1beta1.OcmAPI/CreateOCMShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocmAPIClient) RemoveOCMShare(ctx context.Context, in *RemoveOCMShareRequest, opts ...grpc.CallOption) (*RemoveOCMShareResponse, error) {
	out := new(RemoveOCMShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.sharing.ocm.v1beta1.OcmAPI/RemoveOCMShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocmAPIClient) GetOCMShare(ctx context.Context, in *GetOCMShareRequest, opts ...grpc.CallOption) (*GetOCMShareResponse, error) {
	out := new(GetOCMShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.sharing.ocm.v1beta1.OcmAPI/GetOCMShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocmAPIClient) ListOCMShares(ctx context.Context, in *ListOCMSharesRequest, opts ...grpc.CallOption) (*ListOCMSharesResponse, error) {
	out := new(ListOCMSharesResponse)
	err := c.cc.Invoke(ctx, "/cs3.sharing.ocm.v1beta1.OcmAPI/ListOCMShares", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocmAPIClient) UpdateOCMShare(ctx context.Context, in *UpdateOCMShareRequest, opts ...grpc.CallOption) (*UpdateOCMShareResponse, error) {
	out := new(UpdateOCMShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.sharing.ocm.v1beta1.OcmAPI/UpdateOCMShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocmAPIClient) ListReceivedOCMShares(ctx context.Context, in *ListReceivedOCMSharesRequest, opts ...grpc.CallOption) (*ListReceivedOCMSharesResponse, error) {
	out := new(ListReceivedOCMSharesResponse)
	err := c.cc.Invoke(ctx, "/cs3.sharing.ocm.v1beta1.OcmAPI/ListReceivedOCMShares", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocmAPIClient) UpdateReceivedOCMShare(ctx context.Context, in *UpdateReceivedOCMShareRequest, opts ...grpc.CallOption) (*UpdateReceivedOCMShareResponse, error) {
	out := new(UpdateReceivedOCMShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.sharing.ocm.v1beta1.OcmAPI/UpdateReceivedOCMShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ocmAPIClient) GetReceivedOCMShare(ctx context.Context, in *GetReceivedOCMShareRequest, opts ...grpc.CallOption) (*GetReceivedOCMShareResponse, error) {
	out := new(GetReceivedOCMShareResponse)
	err := c.cc.Invoke(ctx, "/cs3.sharing.ocm.v1beta1.OcmAPI/GetReceivedOCMShare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OcmAPIServer is the server API for OcmAPI service.
type OcmAPIServer interface {
	// Creates a new ocm share.
	// MUST return CODE_NOT_FOUND if the resource reference does not exist.
	// MUST return CODE_ALREADY_EXISTS if the share already exists for the 4-tuple consisting of
	// (owner, shared_resource, grantee).
	// New shares MUST be created in the state SHARE_STATE_PENDING.
	CreateOCMShare(context.Context, *CreateOCMShareRequest) (*CreateOCMShareResponse, error)
	// Removes a share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	RemoveOCMShare(context.Context, *RemoveOCMShareRequest) (*RemoveOCMShareResponse, error)
	// Gets share information for a single share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	GetOCMShare(context.Context, *GetOCMShareRequest) (*GetOCMShareResponse, error)
	// List the shares the authenticated principal has created,
	// both as owner and creator. If a filter is specified, only
	// shares satisfying the filter MUST be returned.
	ListOCMShares(context.Context, *ListOCMSharesRequest) (*ListOCMSharesResponse, error)
	// Updates a share.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	UpdateOCMShare(context.Context, *UpdateOCMShareRequest) (*UpdateOCMShareResponse, error)
	// List all shares the authenticated principal has received.
	ListReceivedOCMShares(context.Context, *ListReceivedOCMSharesRequest) (*ListReceivedOCMSharesResponse, error)
	// Update the received share to change the share state or the display name.
	// MUST return CODE_NOT_FOUND if the share reference does not exist.
	UpdateReceivedOCMShare(context.Context, *UpdateReceivedOCMShareRequest) (*UpdateReceivedOCMShareResponse, error)
	// Get the information for the given received share reference.
	// MUST return CODE_NOT_FOUND if the received share reference does not exist.
	GetReceivedOCMShare(context.Context, *GetReceivedOCMShareRequest) (*GetReceivedOCMShareResponse, error)
}

// UnimplementedOcmAPIServer can be embedded to have forward compatible implementations.
type UnimplementedOcmAPIServer struct {
}

func (*UnimplementedOcmAPIServer) CreateOCMShare(ctx context.Context, req *CreateOCMShareRequest) (*CreateOCMShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOCMShare not implemented")
}
func (*UnimplementedOcmAPIServer) RemoveOCMShare(ctx context.Context, req *RemoveOCMShareRequest) (*RemoveOCMShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveOCMShare not implemented")
}
func (*UnimplementedOcmAPIServer) GetOCMShare(ctx context.Context, req *GetOCMShareRequest) (*GetOCMShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOCMShare not implemented")
}
func (*UnimplementedOcmAPIServer) ListOCMShares(ctx context.Context, req *ListOCMSharesRequest) (*ListOCMSharesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOCMShares not implemented")
}
func (*UnimplementedOcmAPIServer) UpdateOCMShare(ctx context.Context, req *UpdateOCMShareRequest) (*UpdateOCMShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOCMShare not implemented")
}
func (*UnimplementedOcmAPIServer) ListReceivedOCMShares(ctx context.Context, req *ListReceivedOCMSharesRequest) (*ListReceivedOCMSharesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListReceivedOCMShares not implemented")
}
func (*UnimplementedOcmAPIServer) UpdateReceivedOCMShare(ctx context.Context, req *UpdateReceivedOCMShareRequest) (*UpdateReceivedOCMShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReceivedOCMShare not implemented")
}
func (*UnimplementedOcmAPIServer) GetReceivedOCMShare(ctx context.Context, req *GetReceivedOCMShareRequest) (*GetReceivedOCMShareResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetReceivedOCMShare not implemented")
}

func RegisterOcmAPIServer(s *grpc.Server, srv OcmAPIServer) {
	s.RegisterService(&_OcmAPI_serviceDesc, srv)
}

func _OcmAPI_CreateOCMShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOCMShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcmAPIServer).CreateOCMShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.sharing.ocm.v1beta1.OcmAPI/CreateOCMShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcmAPIServer).CreateOCMShare(ctx, req.(*CreateOCMShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcmAPI_RemoveOCMShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveOCMShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcmAPIServer).RemoveOCMShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.sharing.ocm.v1beta1.OcmAPI/RemoveOCMShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcmAPIServer).RemoveOCMShare(ctx, req.(*RemoveOCMShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcmAPI_GetOCMShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOCMShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcmAPIServer).GetOCMShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.sharing.ocm.v1beta1.OcmAPI/GetOCMShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcmAPIServer).GetOCMShare(ctx, req.(*GetOCMShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcmAPI_ListOCMShares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOCMSharesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcmAPIServer).ListOCMShares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.sharing.ocm.v1beta1.OcmAPI/ListOCMShares",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcmAPIServer).ListOCMShares(ctx, req.(*ListOCMSharesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcmAPI_UpdateOCMShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOCMShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcmAPIServer).UpdateOCMShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.sharing.ocm.v1beta1.OcmAPI/UpdateOCMShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcmAPIServer).UpdateOCMShare(ctx, req.(*UpdateOCMShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcmAPI_ListReceivedOCMShares_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListReceivedOCMSharesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcmAPIServer).ListReceivedOCMShares(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.sharing.ocm.v1beta1.OcmAPI/ListReceivedOCMShares",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcmAPIServer).ListReceivedOCMShares(ctx, req.(*ListReceivedOCMSharesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcmAPI_UpdateReceivedOCMShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReceivedOCMShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcmAPIServer).UpdateReceivedOCMShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.sharing.ocm.v1beta1.OcmAPI/UpdateReceivedOCMShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcmAPIServer).UpdateReceivedOCMShare(ctx, req.(*UpdateReceivedOCMShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OcmAPI_GetReceivedOCMShare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetReceivedOCMShareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OcmAPIServer).GetReceivedOCMShare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cs3.sharing.ocm.v1beta1.OcmAPI/GetReceivedOCMShare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OcmAPIServer).GetReceivedOCMShare(ctx, req.(*GetReceivedOCMShareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OcmAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cs3.sharing.ocm.v1beta1.OcmAPI",
	HandlerType: (*OcmAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOCMShare",
			Handler:    _OcmAPI_CreateOCMShare_Handler,
		},
		{
			MethodName: "RemoveOCMShare",
			Handler:    _OcmAPI_RemoveOCMShare_Handler,
		},
		{
			MethodName: "GetOCMShare",
			Handler:    _OcmAPI_GetOCMShare_Handler,
		},
		{
			MethodName: "ListOCMShares",
			Handler:    _OcmAPI_ListOCMShares_Handler,
		},
		{
			MethodName: "UpdateOCMShare",
			Handler:    _OcmAPI_UpdateOCMShare_Handler,
		},
		{
			MethodName: "ListReceivedOCMShares",
			Handler:    _OcmAPI_ListReceivedOCMShares_Handler,
		},
		{
			MethodName: "UpdateReceivedOCMShare",
			Handler:    _OcmAPI_UpdateReceivedOCMShare_Handler,
		},
		{
			MethodName: "GetReceivedOCMShare",
			Handler:    _OcmAPI_GetReceivedOCMShare_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cs3/sharing/ocm/v1beta1/ocm_api.proto",
}
